job_data <- read.csv("data.csv",
stringsAsFactors = FALSE,
)
#data cleaning
title_counts <- table(job_data$job_title)
title_counts <- as.data.frame(title_counts)
colnames(title_counts) <- c("Job_Title", "Count")
#Used a threshold of 7 counts of a job title to help keep data from skewing salary level
threshold <- 7
title_counts <- subset(title_counts, Count > threshold)
ggplot(title_counts, aes(x = Job_Title, y = Count, fill = Job_Title)) +
geom_bar(stat = "identity") +
labs(title = "Count of Job Titles", x = "Job Title", y = "Count") +
scale_x_discrete(labels=abbreviate(x) +
theme(axis.text.x = element_text(angle = 45)
#removing least common job titles
Job_titles_to_keep <- c("Big Data Engineer", "Data Analyst", "Data Artchitect",
#data cleaning
title_counts <- table(job_data$job_title)
title_counts <- as.data.frame(title_counts)
colnames(title_counts) <- c("Job_Title", "Count")
#Used a threshold of 7 counts of a job title to help keep data from skewing salary level
threshold <- 7
title_counts <- subset(title_counts, Count > threshold)
ggplot(title_counts, aes(x = Job_Title, y = Count, fill = Job_Title)) +
geom_bar(stat = "identity") +
labs(title = "Count of Job Titles", x = "Job Title", y = "Count") +
scale_x_discrete(labels=abbreviate(x)) +
theme(axis.text.x = element_text(angle = 45))
#data cleaning
title_counts <- table(job_data$job_title)
title_counts <- as.data.frame(title_counts)
colnames(title_counts) <- c("Job_Title", "Count")
#Used a threshold of 7 counts of a job title to help keep data from skewing salary level
threshold <- 7
title_counts <- subset(title_counts, Count > threshold)
ggplot(title_counts, aes(x = Job_Title, y = Count, fill = Job_Title)) +
geom_bar(stat = "identity") +
labs(title = "Count of Job Titles", x = "Job Title", y = "Count") +
scale_x_discrete(labels=abbreviate(Job_Title)) +
theme(axis.text.x = element_text(angle = 45))
Job_titles_to_keep <- c("Big Data Engineer", "Data Analyst", "Data Artchitect",
"Data Engineer", "Data Science Manager", "Data Scientist",
"Machine Learning Engineer", "Machine Learning Scientist",
"Research Scientist")
filtered_job_data <- filter(job_data, job_title %in% Job_titles_to_keep)
View(title_counts)
#data cleaning
title_counts <- table(job_data$job_title)
title_counts <- as.data.frame(title_counts)
colnames(title_counts) <- c("Job_Title", "Count")
#Used a threshold of 7 counts of a job title to help keep data from skewing salary level
threshold <- 7
title_counts <- subset(title_counts, Count > threshold)
ggplot(title_counts, aes(x = Job_Title, y = Count, fill = Job_Title)) +
geom_bar(stat = "identity") +
labs(title = "Count of Job Titles", x = "Job Title", y = "Count") +
scale_x_discrete(labels=function(x) abbreviate(x, minlength=7)) +
theme(axis.text.x = element_text(angle = 45))
#removing least common job titles
Job_titles_to_keep <- c("Big Data Engineer", "Data Analyst", "Data Artchitect",
"Data Engineer", "Data Science Manager", "Data Scientist",
"Machine Learning Engineer", "Machine Learning Scientist",
"Research Scientist")
filtered_job_data <- filter(job_data, job_title %in% Job_titles_to_keep)
#data cleaning
title_counts <- table(job_data$job_title)
title_counts <- as.data.frame(title_counts)
colnames(title_counts) <- c("Job_Title", "Count")
#Used a threshold of 7 counts of a job title to help keep data from skewing salary level
threshold <- 7
title_counts <- subset(title_counts, Count > threshold)
ggplot(title_counts, aes(x = Job_Title, y = Count, fill = Job_Title)) +
geom_bar(stat = "identity") +
labs(title = "Count of Job Titles", x = "Job Title", y = "Count") +
scale_x_discrete(labels=function(x) abbreviate(x, minlength=3)) +
theme(axis.text.x = element_text(angle = 45))
#removing least common job titles
Job_titles_to_keep <- c("Big Data Engineer", "Data Analyst", "Data Artchitect",
"Data Engineer", "Data Science Manager", "Data Scientist",
"Machine Learning Engineer", "Machine Learning Scientist",
"Research Scientist")
filtered_job_data <- filter(job_data, job_title %in% Job_titles_to_keep)
#data cleaning
title_counts <- table(job_data$job_title)
title_counts <- as.data.frame(title_counts)
colnames(title_counts) <- c("Job_Title", "Count")
#Used a threshold of 7 counts of a job title to help keep data from skewing salary level
threshold <- 7
title_counts <- subset(title_counts, Count > threshold)
ggplot(title_counts, aes(x = Job_Title, y = Count, fill = Job_Title)) +
geom_bar(stat = "identity") +
labs(title = "Count of Job Titles", x = "Job Title", y = "Count") +
scale_x_discrete(labels=function(x) abbreviate(x, minlength=4)) +
theme(axis.text.x = element_text(angle = 45))
#removing least common job titles
Job_titles_to_keep <- c("Big Data Engineer", "Data Analyst", "Data Artchitect",
"Data Engineer", "Data Science Manager", "Data Scientist",
"Machine Learning Engineer", "Machine Learning Scientist",
"Research Scientist")
filtered_job_data <- filter(job_data, job_title %in% Job_titles_to_keep)
#data cleaning
title_counts <- table(job_data$job_title)
title_counts <- as.data.frame(title_counts)
colnames(title_counts) <- c("Job_Title", "Count")
#Used a threshold of 7 counts of a job title to help keep data from skewing salary level
threshold <- 7
title_counts <- subset(title_counts, Count > threshold)
ggplot(title_counts, aes(x = Job_Title, y = Count, fill = Job_Title)) +
geom_bar(stat = "identity") +
labs(title = "Count of Job Titles", x = "Job Title", y = "Count") +
scale_x_discrete(labels=label_wrap(10)) +
theme(axis.text.x = element_text(angle = 45))
#data cleaning
title_counts <- table(job_data$job_title)
title_counts <- as.data.frame(title_counts)
colnames(title_counts) <- c("Job_Title", "Count")
#Used a threshold of 7 counts of a job title to help keep data from skewing salary level
threshold <- 7
title_counts <- subset(title_counts, Count > threshold)
ggplot(title_counts, aes(x = Job_Title, y = Count, fill = Job_Title)) +
geom_bar(stat = "identity") +
labs(title = "Count of Job Titles", x = "Job Title", y = "Count") +
scale_x_discrete(labels=scales::label_wrap(10) +
theme(axis.text.x = element_text(angle = 45))
#removing least common job titles
Job_titles_to_keep <- c("Big Data Engineer", "Data Analyst", "Data Artchitect",
#data cleaning
title_counts <- table(job_data$job_title)
title_counts <- as.data.frame(title_counts)
colnames(title_counts) <- c("Job_Title", "Count")
#Used a threshold of 7 counts of a job title to help keep data from skewing salary level
threshold <- 7
title_counts <- subset(title_counts, Count > threshold)
ggplot(title_counts, aes(x = Job_Title, y = Count, fill = Job_Title)) +
geom_bar(stat = "identity") +
labs(title = "Count of Job Titles", x = "Job Title", y = "Count") +
scale_x_discrete(labels=scales::label_wrap(10)) +
theme(axis.text.x = element_text(angle = 45))
#removing least common job titles
Job_titles_to_keep <- c("Big Data Engineer", "Data Analyst", "Data Artchitect",
"Data Engineer", "Data Science Manager", "Data Scientist",
"Machine Learning Engineer", "Machine Learning Scientist",
"Research Scientist")
filtered_job_data <- filter(job_data, job_title %in% Job_titles_to_keep)
#data cleaning
title_counts <- table(job_data$job_title)
title_counts <- as.data.frame(title_counts)
colnames(title_counts) <- c("Job_Title", "Count")
#Used a threshold of 7 counts of a job title to help keep data from skewing salary level
threshold <- 7
title_counts <- subset(title_counts, Count > threshold)
ggplot(title_counts, aes(x = Job_Title, y = Count, fill = Job_Title)) +
geom_bar(stat = "identity") +
labs(title = "Count of Job Titles", x = "Job Title", y = "Count") +
scale_x_discrete(labels=scales::label_wrap(10)) +
theme(axis.text.x = element_text(angle = 45, size = 8))
#removing least common job titles
Job_titles_to_keep <- c("Big Data Engineer", "Data Analyst", "Data Artchitect",
"Data Engineer", "Data Science Manager", "Data Scientist",
"Machine Learning Engineer", "Machine Learning Scientist",
"Research Scientist")
filtered_job_data <- filter(job_data, job_title %in% Job_titles_to_keep)
#data cleaning
title_counts <- table(job_data$job_title)
title_counts <- as.data.frame(title_counts)
colnames(title_counts) <- c("Job_Title", "Count")
#Used a threshold of 7 counts of a job title to help keep data from skewing salary level
threshold <- 7
title_counts <- subset(title_counts, Count > threshold)
ggplot(title_counts, aes(x = Job_Title, y = Count, fill = Job_Title)) +
geom_bar(stat = "identity") +
labs(title = "Count of Job Titles", x = "Job Title", y = "Count") +
scale_x_discrete(labels=scales::label_wrap(10)) +
theme(axis.text.x = element_text(angle = 45, size = 6))
#removing least common job titles
Job_titles_to_keep <- c("Big Data Engineer", "Data Analyst", "Data Artchitect",
"Data Engineer", "Data Science Manager", "Data Scientist",
"Machine Learning Engineer", "Machine Learning Scientist",
"Research Scientist")
filtered_job_data <- filter(job_data, job_title %in% Job_titles_to_keep)
#data cleaning
title_counts <- table(job_data$job_title)
title_counts <- as.data.frame(title_counts)
colnames(title_counts) <- c("Job_Title", "Count")
#Used a threshold of 7 counts of a job title to help keep data from skewing salary level
threshold <- 7
title_counts <- subset(title_counts, Count > threshold)
ggplot(title_counts, aes(x = Job_Title, y = Count, fill = Job_Title)) +
geom_bar(stat = "identity") +
labs(title = "Count of Job Titles", x = "Job Title", y = "Count") +
scale_x_discrete(labels=scales::label_wrap(10)) +
theme(axis.text.x = element_text(angle = 45, size = 10))
#removing least common job titles
Job_titles_to_keep <- c("Big Data Engineer", "Data Analyst", "Data Artchitect",
"Data Engineer", "Data Science Manager", "Data Scientist",
"Machine Learning Engineer", "Machine Learning Scientist",
"Research Scientist")
filtered_job_data <- filter(job_data, job_title %in% Job_titles_to_keep)
#data cleaning
title_counts <- table(job_data$job_title)
title_counts <- as.data.frame(title_counts)
colnames(title_counts) <- c("Job_Title", "Count")
#Used a threshold of 7 counts of a job title to help keep data from skewing salary level
threshold <- 7
title_counts <- subset(title_counts, Count > threshold)
ggplot(title_counts, aes(x = Job_Title, y = Count, fill = Job_Title)) +
geom_bar(stat = "identity") +
labs(title = "Count of Job Titles", x = "Job Title", y = "Count") +
scale_x_discrete(labels=scales::label_wrap(10)) +
theme(axis.text.x = element_text(angle = 45, size = 8))
#removing least common job titles
Job_titles_to_keep <- c("Big Data Engineer", "Data Analyst", "Data Artchitect",
"Data Engineer", "Data Science Manager", "Data Scientist",
"Machine Learning Engineer", "Machine Learning Scientist",
"Research Scientist")
filtered_job_data <- filter(job_data, job_title %in% Job_titles_to_keep)
# your code here
ggplot(per_pop) +
geom_line(aes(x = year, y = percentage, fill = year)) +
geom_smooth(method = "lm", aes(y=percentage, x=year)) +
facet_grid(~diagnosis) +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = 'percentage of diagnosis by year', x= 'Year', y = "percentage")
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data) +
geom_line(aes(x=work_year, y=salary_in_usd, fill=work_year)) +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
facet_grid(~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Taking out part-time and freelance workers since CEO would most likely hire a full time employee
Employment_type_to_keep <- c("FT")
filtered_job_data <- filter(filtered_job_data, employment_type %in% Employment_type_to_keep)
#Filtering out executive level job salaries since that is an outlier in this data
length(grep("EX", filtered_job_data$experience_level))
exp_level_tp_keep <- c("EN", "MI", "SE")
filtered_job_data <- filter(filtered_job_data, experience_level %in% exp_level_tp_keep)
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data) +
geom_line(aes(x=work_year, y=salary_in_usd, fill=work_year)) +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
facet_grid(~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data) +
geom_point(aes(x=work_year, y=salary_in_usd, fill=work_year)) +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
facet_grid(~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
View(job_data)
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data) +
geom_line(aes(x=work_year, y=salary_in_usd, fill=work_year)) +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
facet_grid(~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data) +
geom_line(aes(x=work_year, y=salary_in_usd, fill=work_year)) +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data) +
geom_line(aes(x=work_year, y=salary_in_usd, fill=work_year)) +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
facet_wrap(~experience_level)
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data) +
geom_line(aes(x=work_year, y=salary_in_usd, fill=work_year)) +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
facet_grid(~experience_level)
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data) +
geom_line(aes(x=work_year, y=salary_in_usd, fill=work_year)) +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
facet_wrap(~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data) +
geom_line(aes(x=work_year, y=salary_in_usd, fill=work_year)) +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
facet_grid(~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data) +
geom_point(aes(x=work_year, y=salary_in_usd, fill=work_year)) +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
facet_grid (~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data, aes(x=work_year, y=salary_in_usd) +
geom_point() +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
facet_grid (~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data, aes(x=work_year, y=salary_in_usd) +
geom_point() +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
facet_grid (~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data, aes(x=work_year, y=salary_in_usd)) +
geom_point() +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
facet_grid (~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data, aes(x=work_year, y=salary_in_usd)) +
geom_line() +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
facet_grid (~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data, aes(x=work_year, y=salary_in_usd)) +
geom_point() +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Average Salary of Experience Level by Year", x= "Year", y="Salary") +
facet_grid (~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Suggested Salary for Data Science Hire
suggest_salary <- ggplot(filtered_job_data, aes(x=work_year, y=salary_in_usd)) +
geom_point() +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Suggested Salary for Hire", x= "Year", y="Salary") +
facet_grid (~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
print(summary())
View(suggest_salary)
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data, aes(x=work_year, y=salary_in_usd)) +
geom_point() +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Suggested Salary for Hire", x= "Year", y="Salary") +
facet_grid (~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
print(summary())
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data, aes(x=work_year, y=salary_in_usd)) +
geom_point() +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Suggested Salary for Hire", x= "Year", y="Salary") +
facet_grid (~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
print(summary(suggest_salary))
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data, aes(x=work_year, y=salary_in_usd)) +
geom_point() +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Suggested Salary for Hire", x= "Year", y="Salary") +
facet_grid (~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
graph_summary <- summary(filtered_job_data)
print(graph_summary)
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data, aes(x=work_year, y=salary_in_usd)) +
geom_point() +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(Title = "Suggested Salary for Hire", x= "Year", y="Salary") +
facet_grid (~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data, aes(x=work_year, y=salary_in_usd)) +
geom_point() +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(title = "Suggested Salary for Hire", x= "Year", y="Salary") +
facet_grid (~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
View(job_data)
salary_us <- filtered_job_data[filtered_job_data$employee_residence
== "United States", "salary_in_usd"]
salary_other <-filtered_job_data[filtered_job_data$employee_residence
!= "United States", "salary_in_usd"]
salary_us <- filtered_job_data[filtered_job_data$employee_residence
== "United States", "salary_in_usd"]
salary_other <-filtered_job_data[filtered_job_data$employee_residence
!= "United States", "salary_in_usd"]
salary_other <-as.data.frame(salary_other)
salary_us <- as.data.frame(salary_us)
View(salary_us)
salary_us <- filtered_job_data[filtered_job_data$employee_residence
== "US", "salary_in_usd"]
salary_other <-filtered_job_data[filtered_job_data$employee_residence
!= "US", "salary_in_usd"]
salary_other <-as.data.frame(salary_other)
salary_us <- as.data.frame(salary_us)
View(salary_other)
View(salary_us)
mean_salary_us <- mean(salary_us$salary_us, na.rm = TRUE)
print(mean_salary_us)
View(salary_other)
mean_salary_us <- mean(salary_us$salary_us, na.rm = TRUE)
print(mean_salary_us)
mean_salary_other <- mean(salary_other$salary_other, na.rm = TRUE)
print(mean_salary_other)
View(salary_us)
us_other_salary <- mean_salary_us %>%
full_join(mean_salary_other)
View(salary_other)
us_other_salary <- mean_salary_us %>%
full_join(mean_salary_other, by = "salary")
us_other_salary <- mean_salary_us %>%
full_join(mean_salary_other, by = "salary_us")
View(title_counts)
us_other_salary <- salary_us %>% bind_cols(salary_other)
us_other_salary <- bind_cols(salary_us, salary_other)
_other_salary <- bind_rows(salary_us, salary_other)
us_other_salary <- bind_rows(salary_us, salary_other)
View(us_other_salary)
us_other_salary <- na.omit(us_other_salary)
View(us_other_salary)
salary_us <- filtered_job_data[filtered_job_data$employee_residence
== "US", "salary_in_usd"]
salary_other <-filtered_job_data[filtered_job_data$employee_residence
!= "US", "salary_in_usd"]
salary_other <-as.data.frame(salary_other)
salary_us <- as.data.frame(salary_us)
mean_salary_us <- mean(salary_us$salary_us, na.rm = TRUE)
print(mean_salary_us)
mean_salary_other <- mean(salary_other$salary_other, na.rm = TRUE)
print(mean_salary_other)
us_other_salary <- bind_rows(salary_us, salary_other)
View(us_other_salary)
compared_salary <- data.frame(country = c('us_salary', 'other_salary'),
mean_salary = c(138199.5, 62546.53))
View(compared_salary)
View(salary_other)
salary_us <- filtered_job_data[filtered_job_data$employee_residence
== "US", "salary_in_usd"]
salary_other <-filtered_job_data[filtered_job_data$employee_residence
!= "US", "salary_in_usd"]
salary_other <-as.data.frame(salary_other)
salary_us <- as.data.frame(salary_us)
mean_salary_us <- mean(salary_us$salary_us, na.rm = TRUE)
print(mean_salary_us)
mean_salary_other <- mean(salary_other$salary_other, na.rm = TRUE)
print(mean_salary_other)
compared_salary <- data.frame(country = c('us_salary', 'other_salary'),
mean_salary = c(138199.5, 62546.53))
ggplot(compared_salary, aes(x = country, y = mean_salary, fill = country)) +
geom_bar() +
labs(title = 'US vs. Other Countries Salaries', x = 'Resident Country',
y = 'Salary in USD') +
theme_minimal() +
scale_y_continuous(labels = scales::dollar_format())
ggplot(compared_salary, aes(x = country, y = mean_salary, fill = country)) +
geom_bar(stat = 'identity') +
labs(title = 'US vs. Other Countries Salaries', x = 'Resident Country',
y = 'Salary in USD') +
theme_minimal() +
scale_y_continuous(labels = scales::dollar_format())
ggplot(compared_salary, aes(x = country, y = mean_salary, fill = country)) +
geom_bar(stat = 'identity') +
labs(title = 'US vs. Other Countries Salaries', x = 'Resident Country',
y = 'Salary in USD') +
theme_minimal() +
scale_y_continuous(labels = scales::dollar_format(), breaks =
c(60000, 90000, 120000, 130000))
compared_salary <- data.frame(country = c('US', 'Other Countries'),
mean_salary = c(138199.5, 62546.53))
ggplot(compared_salary, aes(x = country, y = mean_salary, fill = country)) +
geom_bar(stat = 'identity') +
labs(title = 'US vs. Other Countries Salaries', x = 'Resident Country',
y = 'Salary in USD') +
theme_minimal() +
scale_y_continuous(labels = scales::dollar_format(), breaks =
c(60000, 90000, 120000, 130000))
View(title_counts)
#Suggested Salary for Data Science Hire
ggplot(filtered_job_data, aes(x=work_year, y=salary_in_usd)) +
geom_point() +
geom_smooth(method = "lm", aes(y=salary_in_usd, x=work_year)) +
labs(title = "Suggested Salary for Hire", x= "Year", y="Salary") +
facet_grid (~experience_level) +
scale_y_continuous(labels = scales::dollar_format())+
theme(axis.text.x = element_text(angle=45))
